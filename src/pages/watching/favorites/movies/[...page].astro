---
import Layout from "@layouts/Layout.astro";
import Grid from "@components/media/Grid.astro";
import { fetchMovies } from "@utils/data/movies.js";
import { shuffleArray } from "@utils/helpers/general.js";
import icons from "@cdransf/astro-tabler-icons";
import { WATCHING_PAGE_SIZE } from "@utils/constants/index.js"

export const prerender = true;

export const getStaticPaths = async ({ paginate }) => {
  const movies = await fetchMovies();
  const favoriteMovies = movies.favorites;
  return paginate(favoriteMovies, {
    pageSize: WATCHING_PAGE_SIZE,
  });
};

const { IconArrowLeft } = icons;
const { page } = Astro.props;
const paginatedMovies = page.data;
const pagination = {
  currentPage: page.currentPage,
  totalPages: page.lastPage,
  hasPrevious: page.currentPage > 1,
  hasNext: page.currentPage < page.lastPage,
  previousPage: page.url.prev || null,
  nextPage: page.url.next || null,
  pages: Array.from({ length: page.lastPage }, (_, i) => ({
    number: i + 1,
    href: i === 0 ? `/watching/favorites/movies` : `/watching/favorites/movies/${i + 1}`,
  })),
};
const pageTitle = pagination.currentPage === 1 ? "Favorite movies" : `Favorite movies / page ${pagination.currentPage}`;
const description = "These are my favorite movies. There are many like them, but these are mine.";
---

<Layout
  pageTitle={pageTitle}
  description={description}
  pageUrl={Astro.url.pathname}
  ogImage={shuffleArray(page.data)[0].backdrop}
>
  <a href="/watching" class="back-link">
    <div set:html={IconArrowLeft({ size: 18 })}/> Back to watching
  </a>
  {pagination.currentPage === 1 && (
    <>
      <h2 class="page-title">Favorite Movies</h2>
      <p>{description} <a href="/watching/favorites/shows">You can check out my favorite shows here.</a></p>
      <hr />
    </>
  )}
  <Grid
    data={paginatedMovies}
    pagination={pagination}
    shape="poster"
    count={WATCHING_PAGE_SIZE}
    loading="eager"
  />
</Layout>
