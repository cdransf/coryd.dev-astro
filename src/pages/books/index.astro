---
import Layout from "@layouts/Layout.astro";
import Rss from "@components/blocks/banners/Rss.astro";
import ProgressBar from "@components/media/ProgressBar.astro";
import { fetchBooks } from "@utils/data/books.js";
import { fetchGlobalData } from "@utils/data/global/index.js";
import { md, htmlTruncate } from "@utils/helpers/general.js";
import { bookYearLinks } from "@utils/helpers/media.js";

export const prerender = true;

const books = await fetchBooks();
const currentBookCount = books.currentYear.length;
const bookData = books.all
  .filter((book) => book.status === "started")
  .reverse();
const processedBooks = await Promise.all(
  bookData.map(async (book) => {
    const descriptionHtml = await md(book.description);
    const truncatedHtml = htmlTruncate(descriptionHtml, 50);
    return {
      ...book,
      truncatedDescription: truncatedHtml,
    };
  })
);
const { globals } = await fetchGlobalData(Astro);
const title = "Currently reading";
const description = "Here's what I'm reading at the moment.";
const updated = new Date().toISOString();
const currentYear = new Date().getFullYear();
---

<Layout
  pageTitle={title}
  description={description}
  currentUrl={Astro.url.pathname}
  ogImage={bookData[0].image}
>
  <h2 class="page-title">{title}</h2>
  <p>
    {description} I've finished <strong class="highlight-text"
      >{currentBookCount} books</strong
    > this year.
  </p>
  <p set:html={bookYearLinks(books.years)} />
  <Rss
    url="/feeds/books"
    text="Subscribe to my books feed or follow along on this page"
  />
  <hr />
  {
    processedBooks.map((book) => (
      <article class="book-entry" key={book.url}>
        <a href={book.url}>
          <img
            srcset={`
            ${globals.cdn_url}${book.image}?class=verticalsm&type=webp 200w,
            ${globals.cdn_url}${book.image}?class=verticalmd&type=webp 400w
          `}
            sizes="(max-width: 450px) 200px, 400px"
            src={`${globals.cdn_url}${book.image}?class=verticalsm&type=webp`}
            alt={`${book.title} by ${book.authors}`}
            loading="lazy"
            decoding="async"
            width="200"
            height="307"
          />
        </a>
        <div class="media-meta">
          <a href={book.url}>
            <span class="title">
              <strong>{book.title}</strong>
            </span>
          </a>
          {book.author && <span class="sub-meta">By {book.author}</span>}
          {book.progress && <ProgressBar percentage={`${book.progress}%`} />}
          {book.description && (
            <div
              class="description"
              set:html={book.truncatedDescription}
            />
          )}
        </div>
      </article>
    ))
  }
</Layout>
